generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Match {
  id            String   @id @default(cuid())
  homeTeamId    String
  awayTeamId    String
  stadiumId     String?
  competitionId String
  seasonId      String
  date          DateTime
  homeScore     Int      @default(0)
  awayScore     Int      @default(0)
  createdAt     DateTime @default(now())

  homeTeam    Team        @relation("TeamHomeMatches", fields: [homeTeamId], references: [id])
  awayTeam    Team        @relation("TeamAwayMatches", fields: [awayTeamId], references: [id])
  stadium     Stadium?    @relation(fields: [stadiumId], references: [id])
  competition Competition @relation(fields: [competitionId], references: [id])
  season      Season      @relation(fields: [seasonId], references: [id])

  matchVisits MatchVisit[]
  
  @@unique([homeTeamId, awayTeamId, date]) 
}

model MatchVisit {
  id        String   @id @default(cuid())
  userId    String
  matchId   String
  review    String?
  photos    Photo[]
  createdAt DateTime @default(now())

  match Match @relation(fields: [matchId], references: [id])
}

model Photo {
  id           String   @id @default(cuid())
  url          String
  matchVisitId String
  createdAt    DateTime @default(now())

  matchVisit MatchVisit @relation(fields: [matchVisitId], references: [id])
}

model Stadium {
  id        String  @id @default(cuid())
  name      String
  address   String
  city      String?
  country   String?
  latitude  Float?
  longitude Float?

  teams   Team[]
  matches Match[]
}

model Team {
  id         String  @id @default(cuid())
  apiId      Int     @unique
  name       String
  shortName  String?
  tla        String?
  crest      String?
  address    String?
  website    String?
  founded    Int?
  clubColors String?
  area       String?
  stadiumId  String?

  stadium     Stadium? @relation(fields: [stadiumId], references: [id])
  homeMatches Match[]  @relation("TeamHomeMatches")
  awayMatches Match[]  @relation("TeamAwayMatches")
}

model Competition {
  id        String   @id @default(cuid())
  apiId     Int      @unique
  name      String
  logoUrl   String?
  country   String
  type      String
  fromApi   Boolean  @default(false)

  matches Match[]
  seasons Season[]
}

model Season {
  id              String   @id @default(cuid())
  apiId           Int      @unique
  startDate       DateTime?
  endDate         DateTime?
  currentMatchday Int?
  competitionId   String

  competition Competition @relation(fields: [competitionId], references: [id])
  matches     Match[]
}

model Achievement {
  id          String   @id @default(cuid())
  title       String
  description String?
  imageUrl    String?
  createdAt   DateTime @default(now())

  userAchievements UserAchievement[]
}

model UserAchievement {
  id            String   @id @default(cuid())
  userId        String
  achievementId String
  obtainedAt    DateTime @default(now())

  achievement Achievement @relation(fields: [achievementId], references: [id])
}